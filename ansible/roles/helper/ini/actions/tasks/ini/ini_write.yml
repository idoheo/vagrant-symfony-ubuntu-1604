###
# ../../../../../helper/ini/actions/tasks/ini/ini_write.yml
###
#
# Writes ini file
#
###
#
# helper__ini__ini__write_ini:
#   title <string:"Updating ini files"> - Title of the operation
#   file <string>                       - Name of a file
#   create <boolean:true>               - Should file be created
#   must_exist <boolean:true>           - Does file haveto exist
#   attributes:
#     owner <string|omit:omit>
#     group <string|omit:omit>
#     mode <string|omit:omit>
#   values:
#     true  <mixed:1>  - Value to write for TRUE
#     false <mixed:0>  - Value to write for FALSE
#     null  <mixed:""> - Value to write for nulls (none)
#   data:
#     sections:
#        - seciton <string>            - Section name
#          option_name_prefix <string> - Prefix for option name
#          entires:
#            - option <string>    - Option name
#              value <mixed:omit> - Value to set. {{ omit }} deletes entry
#
###
- name: "{{ helper__ini__ini__write_ini.title | default('Updating ini files') }} (Check file existence)"
  stat: path="{{ helper__ini__ini__write_ini.file | mandatory }}"
  register: result__helper__ini__ini__ini_write
  become: true
  failed_when:     not result__helper__ini__ini__ini_write.stat.exists
               and not helper__ini__ini__write_ini.create | default(true) | bool
               and helper__ini__ini__write_ini.must_exist | default(true) | bool

- name: "{{ helper__ini__ini__write_ini.title | default('Updating ini files') }} (Creating/updating file)"
  file: path="{{ helper__ini__ini__write_ini.file | mandatory }}"
        state="{% if not result__helper__ini__ini__ini_write.stat.exists and helper__ini__ini__write_ini.create | default(true) | bool %}touch{% else %}file{% endif %}"
        owner="{{ helper__ini__ini__write_ini.attributes.owner | default(omit) }}"
        group="{{ helper__ini__ini__write_ini.attributes.group | default(omit) }}"
        mode="{{  helper__ini__ini__write_ini.attributes.mode  | default(omit) }}"
  become: true
  when: helper__ini__ini__write_ini.create | default(true) | bool or result__helper__ini__ini__ini_write.stat.exists

- name: "{{ helper__ini__ini__write_ini.title | default('Updating ini files') }} (Creating ini sections)"
  lineinfile: dest="{{ helper__ini__ini__write_ini.file | mandatory }}"
              insertbefore="BOF"
              line="[{{ item.1.section}}]"
  with_indexed_items: helper__ini__ini__write_ini.data.sections | default([])
  become: true
  when: helper__ini__ini__write_ini.create | default(true) | bool or result__helper__ini__ini__ini_write.stat.exists

- name: "{{ helper__ini__ini__write_ini.title | default('Updating ini files') }} (writting ini entries)"
  ini_file: dest="{{ helper__ini__ini__write_ini.file | mandatory }}"
            section="{{ item.0.section | mandatory }}"
            option="{{ item.0.option_name_prefix | default('') }}{{ item.1.option }}"
            state="{% if item.1.value | default(omit) == omit %}absent{% else %}present{% endif %}"
            value="{% if item.1.value | default(omit) is string %}{{ item.1.value  | default(omit) | string| quote }}{% elif item.1.value  | default(omit)  is not number and item.1.value  | default(omit)  == true %}{{ helper__ini__ini__write_ini.values.true | default(1) }}{% elif item.1.value | default(omit)  is not number and item.1.value | default(omit)  == false %}{{ helper__ini__ini__write_ini.values.false | default(0) }}{% elif item.1.value | default(omit)  is none %}{{ helper__ini__ini__write_ini.values.null | default("") }}{% else %}{{ item.1.value }}{% endif %}"
  with_subelements:
    - "{{ helper__ini__ini__write_ini.data.sections | default([]) }}"
    - entries
  become: true
  when: helper__ini__ini__write_ini.create | default(true) | bool or result__helper__ini__ini__ini_write.stat.exists
